by the OOP we can actually get rid of the modular approacha as our data and the functions are separated to each other .So in OOP the classes are like the map of our house and objects are to build on it.Classes are actually the blurprints and objects are instance on it.Memeber variables and memeber functions are allocated to memory only when the object is to build up.Memeber functions has only space for all objects.

Access Specifiers:
private 
public
protected

Constructors are to called when the object is called.
Default constructor------------->simple
Parameterized constructor --------->paremter get
Copy constructor--------------A( A &obj1){ age=obj1.age)}
overloaded constructor------------>in paramterized constructor initilize the all values of default constructot to it 


If we don't specify a constructor ,then derived class will use appropriate constructor from the base class (Appicable onlt to the default constructor)

1st deafult constructor of base class ,then default constructor of derived class is called.
2nd Parameterized Constructor of Base class is not called when para constructor is present in derived class.
Constructor of base class is always called
calling the original construcyor 
overiding the memeber functions

isA realtionship is such that has a realtio of inheritance we use the function overriding and adding new funcions for the modifications(done by inheritance)
has
A HAS-A relationship is dynamic (run time) binding while inheritance is a static (compile time) binding. If you just want to reuse the code and you know that the two are not of same kind use composition. For example, you cannot inherit an oven from a kitchen. A kitchen HAS-A oven. When you feel there is a natural relationship like Apple is a Fruit use inheritance.
hasA relationship is done by the objects

base class pointer and derived class object ,but this has no access to the derived class only access to the base class.
it is likely to be such that we are sitting in the suzuki and pointing to the civic but we have no access to the civic car .